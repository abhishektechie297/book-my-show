{"ast":null,"code":"var _jsxFileName = \"D:\\\\book-my-show\\\\front-end\\\\src\\\\Context\\\\BsState.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport BsContext from \"./BsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BsState = props => {\n  _s();\n  const [errorPopup, setErrorPopup] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [movie, changeMovie] = useState('');\n  const [time, changeTime] = useState('');\n  const [noOfSeat, changeNoOfSeats] = useState({\n    A1: \"\",\n    A2: \"\",\n    A3: \"\",\n    A4: \"\",\n    D1: \"\",\n    D2: \"\"\n  });\n  const [lastBookingDetails, setLastBookingDetails] = useState(null);\n  const handlePostBooking = async () => {\n    const response = await fetch(`https://localhost:8080/api/booking`, {\n      method: \"Post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringyfy({\n        movie: movie,\n        slot: time,\n        seats: noOfSeat\n      })\n    });\n    const data = await response.json();\n    setErrorPopup(true);\n    setErrorMessage(data.message);\n    if (response.status === 200) {\n      changeTime(\"\");\n      changeMovie(\"\");\n      setLastBookingDetails(data.data);\n      window.localStorage.clear();\n    }\n  };\n  const handleGetBooking = async () => {\n    const response = await fetch(`https://localhost:8080/api/booking`, {\n      method: \"Get\"\n    });\n    const data = await response.json();\n    setLastBookingDetails(data.data);\n  };\n  useEffect(() => {\n    const movie = window.localStorage.getItem(\"movie\");\n    const slot = window.localStorage.getItem(\"slot\");\n    const seats = JSON.parse(window.localStorage.getItem(\"seats\"));\n    if (movie) {\n      changeMovie(movie);\n    }\n    if (slot) {\n      changeTime(slot);\n    }\n    if (seats) {\n      changeNoOfSeats(seats);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BsContext.Provider, {\n    value: {\n      movie,\n      changeMovie,\n      time,\n      changeTime,\n      noOfSeat,\n      changeNoOfSeats,\n      lastBookingDetails,\n      handleGetBooking,\n      handlePostBooking,\n      errorMessage,\n      errorPopup,\n      setErrorMessage,\n      setErrorPopup\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(BsState, \"ekjNf7MAfaX0iJOuuLJkUwDpLAI=\");\n_c = BsState;\nexport default BsState;\nvar _c;\n$RefreshReg$(_c, \"BsState\");","map":{"version":3,"names":["useEffect","useState","BsContext","jsxDEV","_jsxDEV","BsState","props","_s","errorPopup","setErrorPopup","errorMessage","setErrorMessage","movie","changeMovie","time","changeTime","noOfSeat","changeNoOfSeats","A1","A2","A3","A4","D1","D2","lastBookingDetails","setLastBookingDetails","handlePostBooking","response","fetch","method","headers","body","JSON","stringyfy","slot","seats","data","json","message","status","window","localStorage","clear","handleGetBooking","getItem","parse","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/book-my-show/front-end/src/Context/BsState.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport BsContext from \"./BsContext\";\r\n\r\nconst BsState = (props) => {\r\n\r\n    const [errorPopup, setErrorPopup] = useState(false)\r\n    \r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n\r\n    const [movie, changeMovie] = useState('')\r\n\r\n    const [time, changeTime] = useState('')\r\n\r\n    const [noOfSeat, changeNoOfSeats] = useState({\r\n        A1:\"\",\r\n        A2:\"\",\r\n        A3:\"\",\r\n        A4:\"\",\r\n        D1:\"\",\r\n        D2:\"\",\r\n    })\r\n\r\n    const [lastBookingDetails, setLastBookingDetails] = useState(null)\r\n\r\n    const handlePostBooking = async()=> {\r\n        const response = await fetch(`https://localhost:8080/api/booking`,{\r\n        method:\"Post\",\r\n        headers:{\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body:JSON.stringyfy({movie:movie, slot:time, seats:noOfSeat}),\r\n    })\r\n    const data = await response.json()\r\n    \r\n    setErrorPopup(true)\r\n    setErrorMessage(data.message)\r\n\r\n    if(response.status === 200){\r\n        changeTime(\"\")\r\n        changeMovie(\"\")\r\n\r\n        setLastBookingDetails(data.data)\r\n\r\n        window.localStorage.clear()\r\n    }\r\n}\r\n    const handleGetBooking = async () =>{\r\n        const response = await fetch(`https://localhost:8080/api/booking`,{\r\n            method:\"Get\"\r\n        }\r\n\r\n        )\r\n        const data = await response.json()\r\n        setLastBookingDetails(data.data)\r\n    }\r\n\r\n        useEffect(()=>{\r\n            const movie = window.localStorage.getItem(\"movie\")\r\n            const slot = window.localStorage.getItem(\"slot\")\r\n            const seats = JSON.parse(window.localStorage.getItem(\"seats\"))\r\n\r\n            if(movie){\r\n                changeMovie(movie)\r\n            }\r\n            if(slot){\r\n                changeTime(slot)\r\n            }\r\n            if(seats){\r\n                changeNoOfSeats(seats)\r\n            }\r\n        },[])\r\n   return (\r\n        <BsContext.Provider value={{movie, changeMovie, time, \r\n        changeTime, noOfSeat, changeNoOfSeats, \r\n        lastBookingDetails, handleGetBooking, handlePostBooking, errorMessage, \r\n        errorPopup, setErrorMessage, setErrorPopup}}>{props.children}</BsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default BsState;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}